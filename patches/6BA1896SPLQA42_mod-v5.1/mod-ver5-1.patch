diff -ru a/bin/login.sh b/bin/login.sh
--- a/bin/login.sh	2021-03-17 01:53:29.000000000 -0500
+++ b/bin/login.sh	2023-02-06 04:29:57.000000000 -0600
@@ -1,19 +1,3 @@
 #!/bin/sh
 # Copyright (C) 2006-2011 OpenWrt.org
-
-if ( ! grep -qs '^root:[!x]\?:' /etc/shadow || \
-     ! grep -qs '^root:[!x]\?:' /etc/passwd ) && \
-   [ -z "$FAILSAFE" ]
-then
-	echo "Login failed."
-	exit 0
-else
-cat << EOF
- === IMPORTANT ============================
-  Use 'passwd' to set your login password
-  this will disable telnet and enable SSH
- ------------------------------------------
-EOF
-fi
-
 exec /bin/ash --login
diff -ru a/etc/config/omci b/etc/config/omci
--- a/etc/config/omci	2021-09-17 21:24:23.000000000 -0500
+++ b/etc/config/omci	2023-01-26 16:45:43.000000000 -0600
@@ -1,3 +1,3 @@
 config 'omci' 'default'
-	option 'mib_file' '/etc/mibs/data_1g_8q.ini'
+	option 'mib_file' '/etc/mibs/data_1g_8q_us1280_ds512.ini'
 	option 'status_file' '/tmp/omci_status'
diff -ru a/etc/init.d/boot b/etc/init.d/boot
--- a/etc/init.d/boot	2021-03-17 01:53:29.000000000 -0500
+++ b/etc/init.d/boot	2023-02-20 17:37:11.000000000 -0600
@@ -36,7 +36,7 @@
 	[ "$FAILSAFE" = "true" ] && touch /tmp/.failsafe
 
 	/sbin/kmodloader
-
+	
 	# allow wifi modules time to settle
 	sleep 1
 
diff -ru a/etc/init.d/dropbear b/etc/init.d/dropbear
--- a/etc/init.d/dropbear	2021-09-17 21:30:49.000000000 -0500
+++ b/etc/init.d/dropbear	2023-02-06 05:59:56.000000000 -0600
@@ -42,7 +42,7 @@
 		'RootPasswordAuth:bool:1' \
 		'RootLogin:bool:1' \
 		'rsakeyfile:file' \
-		'dsskeyfile:file' \
+		'ecdsakeyfile:file' \
 		'BannerFile:file' \
 		'Port:list(port):22' \
 		'SSHKeepAlive:uinteger:300' \
@@ -53,7 +53,7 @@
 {
 	local PasswordAuth enable Interface GatewayPorts \
 		RootPasswordAuth RootLogin rsakeyfile \
-		dsskeyfile BannerFile Port SSHKeepAlive IdleTimeout
+		ecdsakey BannerFile Port SSHKeepAlive IdleTimeout
 
 	validate_section_dropbear "${1}" || {
 		echo "validation failed"
@@ -71,18 +71,19 @@
 	[ "${RootPasswordAuth}" -eq 0 ] && procd_append_param command -g
 	[ "${RootLogin}" -eq 0 ] && procd_append_param command -w
 	[ -n "${rsakeyfile}" ] && procd_append_param command -r "${rsakeyfile}"
-	[ -n "${dsskeyfile}" ] && procd_append_param command -d "${dsskeyfile}"
+	[ -n "${ecdsakeyfile}" ] && procd_append_param command -r "${ecdsakeyfile}"
 	[ -n "${BannerFile}" ] && procd_append_param command -b "${BannerFile}"
 	[ -n "${Interface}" ] && network_get_device Interface "${Interface}"
 	append_ports "${Interface}" "${Port}"
 	[ "${IdleTimeout}" -ne 0 ] && procd_append_param command -I "${IdleTimeout}"
 	[ "${SSHKeepAlive}" -ne 0 ] && procd_append_param command -K "${SSHKeepAlive}"
+	procd_set_param respawn
 	procd_close_instance
 }
 
 keygen()
 {
-	for keytype in rsa dss; do
+	for keytype in rsa; do
 		# check for keys
 		key=dropbear/dropbear_${keytype}_host_key
 		[ -f /tmp/$key -o -s /etc/$key ] || {
@@ -95,18 +96,31 @@
 		}
 	done
 
+	for keytype in ecdsa; do
+		# check for keys
+		key=dropbear/dropbear_${keytype}_host_key
+		[ -f /tmp/$key -o -s /etc/$key ] || {
+			# generate missing keys
+			mkdir -p /tmp/dropbear
+			[ -x /usr/bin/dropbearkey ] && {
+				/usr/bin/dropbearkey -t $keytype -s 521 -f /tmp/$key 2>&- >&- && exec /etc/rc.common "$initscript" start
+			} &
+		exit 0
+		}
+	done
+
 	lock /tmp/.switch2jffs
 	mkdir -p /etc/dropbear
 	mv /tmp/dropbear/dropbear_* /etc/dropbear/
 	lock -u /tmp/.switch2jffs
-	#chown root /etc/dropbear
-	#chmod 0700 /etc/dropbear
+	chown root /etc/dropbear
+	chmod 0700 /etc/dropbear
 }
 
 start_service()
 {
 	[ -s /etc/dropbear/dropbear_rsa_host_key -a \
-	  -s /etc/dropbear/dropbear_dss_host_key ] || keygen
+	-s /etc/dropbear/dropbear_ecdsa_host_key ] || keygen
 
 	. /lib/functions.sh
 	. /lib/functions/network.sh
@@ -117,7 +131,13 @@
 
 service_triggers()
 {
-	procd_add_reload_trigger "dropbear"
+	procd_open_trigger
+	procd_add_config_trigger "config.change" "dropbear" /etc/init.d/dropbear reload
+
+	config_load "${NAME}"
+
+	procd_close_trigger
+
 	procd_add_validation validate_section_dropbear
 }
 
diff -ru a/etc/init.d/omcid.sh b/etc/init.d/omcid.sh
--- a/etc/init.d/omcid.sh	2021-09-17 21:27:01.000000000 -0500
+++ b/etc/init.d/omcid.sh	2023-03-17 10:39:11.000000000 -0500
@@ -41,22 +41,31 @@
 	local omci_iop_mask
 	local lct=""
 
-	#is_flash_boot && wait_for_jffs
-
 	config_load omci
+	
+	tmp=`fw_printenv omci_hw_ver 2>&- | cut -f2 -d=`
+	if [ -n "$tmp" ]; then
+		sed "s/256 0 HWTC 0000000000000/256 0 HWTC ${tmp}/" /rom/etc/mibs/data_1g_8q_us1280_ds512.ini > /tmp/auto_generated_mib.ini
+		mib_file="/tmp/auto_generated_mib.ini"
+	else
+		mib_file="/rom/etc/mibs/data_1g_8q_us1280_ds512.ini"
+	fi
 
-	tmp=`fw_printenv mib_file 2>&- | cut -f2 -d=`
+	tmp=`fw_printenv mib_file_custom 2>&- | cut -f2 -d=`
 	if [ -f "/etc/mibs/$tmp" ]; then
 		mib_file="/etc/mibs/$tmp"
+	fi
+	
+	tmp=`fw_printenv omci_omcc_ver 2>&- | cut -f2 -d=`
+	if [ -n "$tmp" ]; then
+		omcc_version=$tmp
 	else
-		config_get mib_file "default" "mib_file" "/etc/mibs/data_1g_8q.ini"
+		omcc_version=160
 	fi
 
 	config_get tmp "default" "status_file" "/tmp/omci_status"
 	status_entry_create "$tmp"
 
-	config_get omcc_version "default" "omcc_version" 160
-
 	case $(uci -q get network.lct.ifname) in
 	lct0)
 		lct=-g1
diff -ru a/etc/init.d/onu.sh b/etc/init.d/onu.sh
--- a/etc/init.d/onu.sh	2021-09-17 21:25:34.000000000 -0500
+++ b/etc/init.d/onu.sh	2023-05-02 13:29:24.000000000 -0500
@@ -20,25 +20,35 @@
 }
 
 ploam_config() {
-	local nSerial
-	nSerial=""
-	for i in `seq 5`; do
-	    nSerial=`/opt/lantiq/bin/sfp_i2c -g 2>&- | cut -f2 -d=`
-	    if [ -n "$nSerial" ]; then
-		break
-	    fi
-	done
-	if [ -z "$nSerial" ]; then
-		nSerial=`fw_printenv nSerial 2>&- | cut -f2 -d=`
-		if [ -z "$nSerial" ]; then
-			# create out of lantiq OID and ether mac the serial number
-			ethaddr=$(awk 'BEGIN{RS=" ";FS="="} $1 == "ethaddr" {print $2}' /proc/cmdline)
-			nSerial=$(echo $ethaddr | awk 'BEGIN{FS=":"} {print "SPTC"$3""$4""$5""$6""}')
-		fi
+	local onu_serial
+
+	tmp=`fw_printenv onu_serial 2>&- | cut -f2 -d=`
+	if [ -n "$tmp" ]; then
+		onu_serial="$tmp"
+	else
+		# create out of lantiq OID and ether mac the serial number
+		logger -t "[onu]" "Using fallback ONU serial generated with ether mac"
+		ethaddr=$(awk 'BEGIN{RS=" ";FS="="} $1 == "ethaddr" {print $2}' /proc/cmdline)
+		onu_serial=$(echo $ethaddr | awk 'BEGIN{FS=":"} {print "SPTC"$3""$4""$5""$6""}')
 	fi
+	
 	onu ploam_init
-	logger -t "[onu]" "Using ploam serial number: $nSerial"
-	onu gtcsns $nSerial
+	logger -t "[onu]" "Using ploam serial number: $onu_serial"
+	onu gtcsns $onu_serial
+}
+
+
+generate_ploam_password_hex() {
+    local ploam_string=$1
+    local ploam_len=${#ploam_string}
+
+    # We have to add NUL (0x00) characters to the end of the ploam if it is less than 10 characters
+    for c in $(seq $ploam_len 9); do
+        ploam_string="${ploam_string}\x00"
+    done
+
+    # Return ploam in hex
+    echo -ne "${ploam_string}" | hexdump -v -e '/1 "0x%02X "' | xargs
 }
 
 #
@@ -67,7 +77,8 @@
 	local nLaserOffset
 	local nLaserEnEndExt
 	local nLaserEnStartExt
-	local nPassword
+	local onu_ploam
+	local onu_ploam_hex
 	local nT01
 	local nT02
 
@@ -84,11 +95,31 @@
 	config_get nLaserOffset "gtc" nLaserOffset
 	config_get nLaserEnEndExt "gtc" nLaserEnEndExt
 	config_get nLaserEnStartExt "gtc" nLaserEnStartExt
-	nPassword=""
-	nPassword=`fw_printenv nPassword 2>&- | cut -f2 -d=`
-	if [ -z "$nPassword" ]; then
-	   config_get nPassword "ploam" nPassword
+	
+	tmp=`fw_printenv onu_ploam 2>&- | cut -f2 -d=`
+	if [ -n "$tmp" ]; then
+		onu_ploam="$tmp"
+	else
+		logger -t "[onu]" "Using fallback ONU ploam (0000000000)"
+		onu_ploam="0000000000"
+	fi
+	
+	onu_ploam_hex=$(generate_ploam_password_hex "${onu_ploam}")
+	
+	tmp=`fw_printenv onu_loid 2>&- | cut -f2 -d=`
+	if [ -n "$tmp" ]; then
+		fw_setenv omci_loid "$tmp"
+	else
+		fw_setenv omci_loid "user"
+	fi
+	
+	tmp=`fw_printenv onu_loid_password 2>&- | cut -f2 -d=`
+	if [ -n "$tmp" ]; then
+		fw_setenv omci_lpwd "$tmp"
+	else
+		fw_setenv omci_lpwd "password"
 	fi
+	
 	config_get nRogueMsgIdUpstreamReset "ploam" nRogueMsgIdUpstreamReset
 	config_get nRogueMsgRepeatUpstreamReset "ploam" nRogueMsgRepeatUpstreamReset
 	config_get nRogueMsgIdDeviceReset "ploam" nRogueMsgIdDeviceReset
@@ -105,7 +136,7 @@
 	config_get nDyingGaspHyst "gtc" nDyingGaspHyst
 	config_get nDyingGaspMsg "gtc" nDyingGaspMsg
 
-	onu gtccs 3600000 5 9 10 $nRogueMsgIdUpstreamReset $nRogueMsgRepeatUpstreamReset $nRogueMsgIdDeviceReset $nRogueMsgRepeatDeviceReset $nRogueEnable $nT01 $nT02 $(falcon_ploam_emergency_stop_state_get) $nPassword
+	onu gtccs 3600000 5 9 10 $nRogueMsgIdUpstreamReset $nRogueMsgRepeatUpstreamReset $nRogueMsgIdDeviceReset $nRogueMsgRepeatDeviceReset $nRogueEnable $nT01 $nT02 $(falcon_ploam_emergency_stop_state_get) $onu_ploam_hex
 	onu gtci $bDlosEnable $bDlosInversion $nDlosWindowSize $nDlosTriggerThreshold $nLaserGap $nLaserOffset $nLaserEnEndExt $nLaserEnStartExt
 
 	onu gtc_dying_gasp_cfg_set $nDyingGaspEnable $nDyingGaspHyst $nDyingGaspMsg
diff -ru a/etc/init.d/sfp_eeprom.sh b/etc/init.d/sfp_eeprom.sh
--- a/etc/init.d/sfp_eeprom.sh	2021-09-17 21:27:09.000000000 -0500
+++ b/etc/init.d/sfp_eeprom.sh	2023-03-17 13:18:36.000000000 -0500
@@ -100,16 +100,56 @@
 
 	# reset to default values
 	sfp_i2c -d yes
-	#vendor_config
-	#serialnumber_config
-	#bitrate_config
-	# configure I2C EEPROM addresses
-	#eeprom_addr_config
-	# activate write protection
-	#sfp_i2c -i 0 -l 128 -p 1
-	#sfp_i2c -i 256 -l 128 -p 1
-	# activate write protection for dedicated fields
-	#sfp_i2c -i 366 -p 2 -m 0x87
+	
+	tmp=`fw_printenv sfp_vendor_name 2>&- | cut -f2 -d=`
+	if [ -n "$tmp" ]; then
+		/opt/lantiq/bin/sfp_i2c -i0 -s "$tmp"
+	else
+		/opt/lantiq/bin/sfp_i2c -i0 -s "Lantiq"
+	fi
+	
+	tmp=`fw_printenv sfp_part_name 2>&- | cut -f2 -d=`
+	if [ -n "$tmp" ]; then
+		/opt/lantiq/bin/sfp_i2c -i1 -s "$tmp"
+	else
+		/opt/lantiq/bin/sfp_i2c -i1 -s "Falcon SFP"
+	fi
+	
+	tmp=`fw_printenv sfp_vendor_rev 2>&- | cut -f2 -d=`
+	if [ -n "$tmp" ]; then
+		/opt/lantiq/bin/sfp_i2c -i2 -s "$tmp"
+	else
+		/opt/lantiq/bin/sfp_i2c -i2 -s "0"
+	fi
+	
+	tmp=`fw_printenv sfp_part_serial 2>&- | cut -f2 -d=`
+	if [ -n "$tmp" ]; then
+		/opt/lantiq/bin/sfp_i2c -i3 -s "$tmp"
+	fi
+	
+	tmp=`fw_printenv sfp_date_code 2>&- | cut -f2 -d=`
+	if [ -n "$tmp" ]; then
+		/opt/lantiq/bin/sfp_i2c -i4 -s "$tmp"
+	fi
+	
+	tmp=`fw_printenv sfp_vendor_data 2>&- | cut -f2 -d=`
+	if [ -n "$tmp" ]; then
+		/opt/lantiq/bin/sfp_i2c -i5 -s "$tmp"
+	fi
+	
+	tmp=`fw_printenv omci_equip_id 2>&- | cut -f2 -d=`
+	if [ -n "$tmp" ]; then
+		/opt/lantiq/bin/sfp_i2c -i6 -s "$tmp"
+	else
+		/opt/lantiq/bin/sfp_i2c -i6 -s "MA5671B"
+	fi
+	
+	tmp=`fw_printenv omci_vendor_id 2>&- | cut -f2 -d=`
+	if [ -n "$tmp" ]; then
+		/opt/lantiq/bin/sfp_i2c -i7 -s "$tmp"
+	else
+		/opt/lantiq/bin/sfp_i2c -i7 -s "SPTC"
+	fi
 
 	config_get eeprom default eeprom 1
 
diff -ru a/etc/init.d/telnet b/etc/init.d/telnet
--- a/etc/init.d/telnet	2021-09-17 21:31:38.000000000 -0500
+++ b/etc/init.d/telnet	2023-02-06 04:13:07.000000000 -0600
@@ -6,42 +6,8 @@
 USE_PROCD=1
 PROG=/usr/sbin/telnetd
 
-has_root_pwd() {
-	local pwd=$([ -f "$1" ] && cat "$1")
-	      pwd="${pwd#*root:}"
-	      pwd="${pwd%%:*}"
-
-	test -n "${pwd#[\!x]}"
-}
-
-get_root_home() {
-	local homedir=$([ -f "$1" ] && cat "$1")
-	homedir="${homedir#*:*:0:0:*:}"
-
-	echo "${homedir%%:*}"
-}
-
-has_ssh_pubkey() {
-	( /etc/init.d/dropbear enabled 2> /dev/null && grep -qs "^ssh-" /etc/dropbear/authorized_keys ) || \
-	( /etc/init.d/sshd enabled 2> /dev/null && grep -qs "^ssh-" "$(get_root_home /etc/passwd)"/.ssh/authorized_keys )
-}
-
 start_service() {
-	if ( ! has_ssh_pubkey && \
-	     ! has_root_pwd /etc/passwd && ! has_root_pwd /etc/shadow ) || \
-	   ( ! /etc/init.d/dropbear enabled 2> /dev/null && ! /etc/init.d/sshd enabled 2> /dev/null );
-	then
-		
-		telnetEnable=`fw_printenv telnetEnable 2>&- | cut -f2 -d=`
-		#if [ -z "$telnetEnable" ]; then
-		#	telnetEnable="true"
-		#fi
-
-		if [ "$telnetEnable" == "true" ]; then          
-			procd_open_instance
-			procd_set_param command "$PROG" -F -l /bin/login.sh
-			procd_close_instance
-		fi
-	fi
-	chpasswd
+	procd_open_instance
+	procd_set_param command "$PROG" -F -l /bin/login.sh
+	procd_close_instance
 }
diff -ru a/etc/mibs/data_1g_8q_us1280_ds512.ini b/etc/mibs/data_1g_8q_us1280_ds512.ini
--- a/etc/mibs/data_1g_8q_us1280_ds512.ini	2021-09-17 21:27:01.000000000 -0500
+++ b/etc/mibs/data_1g_8q_us1280_ds512.ini	2023-01-26 16:45:43.000000000 -0600
@@ -15,16 +15,13 @@
 256 0 HWTC 0000000000000 00000000 2 0 0 0 0 #0
 
 # ONT2-G
-# Begin: modified by Sean.Chen for Reliance bug 373267 on 20170628
-# 257 0 MA5671B\0\0\0\0\0\0\0\0\0\0\0\0\0\0 0xa0 0 1 1 64 64 1 64 0 0x007f 0 24 48
-257 0 MA5671B\0\0\0\0\0\0\0\0\0\0\0\0\0\0 0xa0 0 1 1 64 10 1 64 0 0x007f 0 24 48
-# End: modified by Sean.Chen for Reliance bug 373267 on 20170628
+257 0 MA5671B\0\0\0\0\0\0\0\0\0\0\0\0\0\0 0xa0 0xcc 1 1 64 64 1 64 0 0x007f 0 24 48
 
 # ONT data
 2 0 0
 
 # ONU dynamic power management control
-336 0 0x3 0x0 0 0 0 0 0
+336 0 0x3 0x0 0 0 0 0 0 0x0000000000000000
 
 # Software image
 7 0
@@ -34,13 +31,13 @@
 158 0 0 "                         "
 
 # OLT-G
-131 0 "    " "                    " "              "
+131 0 "    " "                    " "              " 0x0000000000000000000000000000
 
 # ANI Cardholder
-5 0x0180 248 248 0 "                    " "                    " 0 0 0 0
+5 0x0180 249 249 0 "                    " "                    " 0 0 0 0
 
 # ANI Circuit pack
-6 0x0180 248 1 "        " "              " SPSP 0 1 0 "                    " 0 0 0 0 0
+6 0x0180 249 1 "        " "              " HWTC 0 1 0 "                    " 0 0 0 0 0
 
 # ANI-G
 263 0x8001 1 8 48 0 0 5 9 0 0 0 0xff 0xff 0 0 0x81 0x81
@@ -53,12 +50,10 @@
 11 0x0101 0 0 0 0x00 0 1 0 2000 0 0xffff 0 0 0 0 0
 
 # UNI Cardholder
-# 5 0xff01 47 47 0 "                    " "                    " 0 0 0 0
-5 0x0101 47 47 0 "                    " "                    " 0 0 0 0
+5 0xff01 47 47 0 "                    " "                    " 0 0 0 0
 
 # UNI Circuit Pack
-# 6 0xff01 47 1 "        " "              " SPSP 0 1 0 "                    " 0 0 0 0 0
-6 0x0101 47 1 "        " "              " SPSP 0 1 0 "                    " 0 0 0 0 0
+6 0xff01 47 1 "        " "              " HWTC 0 1 0 "                    " 0 0 0 0 0
 
 # UNI-G (PPTP Ethernet UNI)
 264 0x0101 0 0 0 0
@@ -113,7 +108,7 @@
 278 0xff04 0x8004 0x0000 0x02 0x00
 278 0xff05 0x8005 0x0000 0x02 0x00
 278 0xff06 0x8006 0x0000 0x02 0x00
-278 0xff07 0x8007 0x0000 0x02 0x00 
+278 0xff07 0x8007 0x0000 0x02 0x00
 
 # ANI Priority Queue (US), 8 queues per T-CONT (US)
 277 0x8000 1 0 0 60000 0xffff 0x80000000 0xff00 0x01 0x01 0x00000000 0xffff 0xffff \x35\x56\x35\x56\x35\x56\x35\x56 \x00\x00 15 1
@@ -142,7 +137,7 @@
 277 0x8015 1 0 0 60000 0xffff 0x80020005 0xff02 0x01 0x01 0x00000000 0xffff 0xffff \x35\x56\x35\x56\x35\x56\x35\x56 \x00\x00 15 1
 277 0x8016 1 0 0 60000 0xffff 0x80020006 0xff02 0x01 0x01 0x00000000 0xffff 0xffff \x35\x56\x35\x56\x35\x56\x35\x56 \x00\x00 15 1
 277 0x8017 1 0 0 60000 0xffff 0x80020007 0xff02 0x01 0x01 0x00000000 0xffff 0xffff \x35\x56\x35\x56\x35\x56\x35\x56 \x00\x00 15 1
-                              
+
 277 0x8018 1 0 0 60000 0xffff 0x80030000 0xff03 0x01 0x01 0x00000000 0xffff 0xffff \x35\x56\x35\x56\x35\x56\x35\x56 \x00\x00 15 1
 277 0x8019 1 0 0 60000 0xffff 0x80030001 0xff03 0x01 0x01 0x00000000 0xffff 0xffff \x35\x56\x35\x56\x35\x56\x35\x56 \x00\x00 15 1
 277 0x801a 1 0 0 60000 0xffff 0x80030002 0xff03 0x01 0x01 0x00000000 0xffff 0xffff \x35\x56\x35\x56\x35\x56\x35\x56 \x00\x00 15 1
@@ -151,7 +146,7 @@
 277 0x801d 1 0 0 60000 0xffff 0x80030005 0xff03 0x01 0x01 0x00000000 0xffff 0xffff \x35\x56\x35\x56\x35\x56\x35\x56 \x00\x00 15 1
 277 0x801e 1 0 0 60000 0xffff 0x80030006 0xff03 0x01 0x01 0x00000000 0xffff 0xffff \x35\x56\x35\x56\x35\x56\x35\x56 \x00\x00 15 1
 277 0x801f 1 0 0 60000 0xffff 0x80030007 0xff03 0x01 0x01 0x00000000 0xffff 0xffff \x35\x56\x35\x56\x35\x56\x35\x56 \x00\x00 15 1
-                              
+
 277 0x8020 1 0 0 60000 0xffff 0x80040000 0xff04 0x01 0x01 0x00000000 0xffff 0xffff \x35\x56\x35\x56\x35\x56\x35\x56 \x00\x00 15 1
 277 0x8021 1 0 0 60000 0xffff 0x80040001 0xff04 0x01 0x01 0x00000000 0xffff 0xffff \x35\x56\x35\x56\x35\x56\x35\x56 \x00\x00 15 1
 277 0x8022 1 0 0 60000 0xffff 0x80040002 0xff04 0x01 0x01 0x00000000 0xffff 0xffff \x35\x56\x35\x56\x35\x56\x35\x56 \x00\x00 15 1
@@ -160,7 +155,7 @@
 277 0x8025 1 0 0 60000 0xffff 0x80040005 0xff04 0x01 0x01 0x00000000 0xffff 0xffff \x35\x56\x35\x56\x35\x56\x35\x56 \x00\x00 15 1
 277 0x8026 1 0 0 60000 0xffff 0x80040006 0xff04 0x01 0x01 0x00000000 0xffff 0xffff \x35\x56\x35\x56\x35\x56\x35\x56 \x00\x00 15 1
 277 0x8027 1 0 0 60000 0xffff 0x80040007 0xff04 0x01 0x01 0x00000000 0xffff 0xffff \x35\x56\x35\x56\x35\x56\x35\x56 \x00\x00 15 1
-                              
+
 277 0x8028 1 0 0 60000 0xffff 0x80050000 0xff05 0x01 0x01 0x00000000 0xffff 0xffff \x35\x56\x35\x56\x35\x56\x35\x56 \x00\x00 15 1
 277 0x8029 1 0 0 60000 0xffff 0x80050001 0xff05 0x01 0x01 0x00000000 0xffff 0xffff \x35\x56\x35\x56\x35\x56\x35\x56 \x00\x00 15 1
 277 0x802a 1 0 0 60000 0xffff 0x80050002 0xff05 0x01 0x01 0x00000000 0xffff 0xffff \x35\x56\x35\x56\x35\x56\x35\x56 \x00\x00 15 1
@@ -169,7 +164,7 @@
 277 0x802d 1 0 0 60000 0xffff 0x80050005 0xff05 0x01 0x01 0x00000000 0xffff 0xffff \x35\x56\x35\x56\x35\x56\x35\x56 \x00\x00 15 1
 277 0x802e 1 0 0 60000 0xffff 0x80050006 0xff05 0x01 0x01 0x00000000 0xffff 0xffff \x35\x56\x35\x56\x35\x56\x35\x56 \x00\x00 15 1
 277 0x802f 1 0 0 60000 0xffff 0x80050007 0xff05 0x01 0x01 0x00000000 0xffff 0xffff \x35\x56\x35\x56\x35\x56\x35\x56 \x00\x00 15 1
-                              
+
 277 0x8030 1 0 0 60000 0xffff 0x80060000 0xff06 0x01 0x01 0x00000000 0xffff 0xffff \x35\x56\x35\x56\x35\x56\x35\x56 \x00\x00 15 1
 277 0x8031 1 0 0 60000 0xffff 0x80060001 0xff06 0x01 0x01 0x00000000 0xffff 0xffff \x35\x56\x35\x56\x35\x56\x35\x56 \x00\x00 15 1
 277 0x8032 1 0 0 60000 0xffff 0x80060002 0xff06 0x01 0x01 0x00000000 0xffff 0xffff \x35\x56\x35\x56\x35\x56\x35\x56 \x00\x00 15 1
@@ -178,7 +173,7 @@
 277 0x8035 1 0 0 60000 0xffff 0x80060005 0xff06 0x01 0x01 0x00000000 0xffff 0xffff \x35\x56\x35\x56\x35\x56\x35\x56 \x00\x00 15 1
 277 0x8036 1 0 0 60000 0xffff 0x80060006 0xff06 0x01 0x01 0x00000000 0xffff 0xffff \x35\x56\x35\x56\x35\x56\x35\x56 \x00\x00 15 1
 277 0x8037 1 0 0 60000 0xffff 0x80060007 0xff06 0x01 0x01 0x00000000 0xffff 0xffff \x35\x56\x35\x56\x35\x56\x35\x56 \x00\x00 15 1
-                              
+
 277 0x8038 1 0 0 60000 0xffff 0x80070000 0xff07 0x01 0x01 0x00000000 0xffff 0xffff \x35\x56\x35\x56\x35\x56\x35\x56 \x00\x00 15 1
 277 0x8039 1 0 0 60000 0xffff 0x80070001 0xff07 0x01 0x01 0x00000000 0xffff 0xffff \x35\x56\x35\x56\x35\x56\x35\x56 \x00\x00 15 1
 277 0x803a 1 0 0 60000 0xffff 0x80070002 0xff07 0x01 0x01 0x00000000 0xffff 0xffff \x35\x56\x35\x56\x35\x56\x35\x56 \x00\x00 15 1
@@ -202,7 +197,9 @@
 
 # LIOD Password
 65530 0 CTC\0 \0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0 \0\0\0\0\0\0\0\0\0\0\0\0 0
-# IPv6 host config data
-347 1
 
+# ONU Capability
+65529 0 CTC\0 0 0 0
 
+# IPv6 host config data
+347 1
diff -ru a/etc/passwd b/etc/passwd
--- a/etc/passwd	2021-03-17 01:53:29.000000000 -0500
+++ b/etc/passwd	2023-02-06 06:15:54.000000000 -0600
@@ -1,4 +1,4 @@
-root:x:0:0:root:/root:/bin/false
+root:x:0:0:root:/root:/bin/ash
 ONTUSER:x:0:0:ONTUSER:/home/ONTUSER:/bin/ash
 daemon:*:1:1:daemon:/var:/bin/false
 ftp:*:55:55:ftp:/home/ftp:/bin/false
diff -ru a/etc/shadow b/etc/shadow
--- a/etc/shadow	2021-03-17 01:53:29.000000000 -0500
+++ b/etc/shadow	2023-02-06 06:15:38.000000000 -0600
@@ -1,4 +1,4 @@
-root:*:0:0:99999:7:::
+root:$1$1ByC0ahL$O3BCx52viICQ9UEm3WiZP1:19394:0:99999:7:::
 ONTUSER:$6$mYQnmn3MLtYla6rV$DIlnn6XmGATG4RGr8U1O7mw8UQ/sZqOp4kPkSY672KmTjS4gvPIz1l3aLtQrPIxoe2q10pX4d.zmuzHtlrYux1:16634:0:99999:7:::
 daemon:*:0:0:99999:7:::
 ftp:*:0:0:99999:7:::
Only in b/opt/lantiq/bin: omcid.bspatch
Only in b/opt/lantiq/bin: omcid_patch.base64
diff -ru a/opt/lantiq/bin/set_serial_number b/opt/lantiq/bin/set_serial_number
--- a/opt/lantiq/bin/set_serial_number	2021-06-29 04:00:54.000000000 -0500
+++ b/opt/lantiq/bin/set_serial_number	2023-03-17 11:21:52.000000000 -0500
@@ -14,4 +14,4 @@
       usage
 fi
 
-${sfp}  -s  $*  -i  8
+fw_setenv onu_serial "$*"
diff -ru a/sbin/firstboot b/sbin/firstboot
--- a/sbin/firstboot	2021-03-17 01:53:29.000000000 -0500
+++ b/sbin/firstboot	2023-05-02 13:11:10.000000000 -0500
@@ -1,3 +1,38 @@
 #!/bin/sh
 
-/sbin/jffs2reset
+echo "Welcome to FS.com firmware MODDED version 5.1" > /dev/console
+echo "Resetting rootfs_data" > /dev/console
+umount /overlay 1> /dev/null 2> /dev/null || true
+jffs2reset -y 1> /dev/null 2> /dev/null
+echo "Resetting GPON specific uboot env" > /dev/console
+fw_setenv mib_file_custom
+fw_setenv mib_file
+fw_setenv omci_hw_ver
+fw_setenv omci_omcc_ver
+fw_setenv omci_equip_id
+fw_setenv omci_vendor_id
+fw_setenv onu_serial
+fw_setenv onu_ploam
+fw_setenv onu_loid
+fw_setenv onu_loid_password
+fw_setenv sfp_vendor_name
+fw_setenv sfp_part_name
+fw_setenv sfp_vendor_rev
+fw_setenv sfp_part_serial
+fw_setenv sfp_date_code
+fw_setenv sfp_vendor_data
+fw_setenv sgmii_mode
+fw_setenv image0_version "FS v5"
+fw_setenv image1_version "FS v5"
+echo "Resetting management IP to 192.168.1.10" > /dev/console
+fw_setenv ipaddr 192.168.1.10
+fw_setenv gatewayip 192.168.2.1
+echo "Enforce bootloader unlock (better safe than sorry)" > /dev/console
+fw_setenv bootdelay 5
+fw_setenv asc0 0
+fw_setenv preboot "gpio set 3;gpio input 2;gpio input 105;gpio input 106;gpio input 107;gpio input 108"
+
+echo "!!!!!!!!!!!!!!!!!!!!!!" > /dev/console
+echo "Now you should unplug and reconnect the SFP!" > /dev/console
+echo "Hardware reboot is required! After this restart the firmware is ready to use" > /dev/console
+echo "!!!!!!!!!!!!!!!!!!!!!!" > /dev/console
Only in a/: www
